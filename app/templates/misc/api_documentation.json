{
  "generic_error_responses": [
    {
      "failure_name": "auth_failure",
      "description": "This error is returned when attempting to access an authentication-required endpoint without authentication, or when attempting to access an authentication-optional endpoint with an invalid API key."
    },
    {
      "failure_name": "auth_method_disabled_failure",
      "description": "This error is returned when attempting to access an API endpoint that's only used when local users are used, but this installation uses an external authentication mechanism."
    },
    {
      "failure_name": "incomplete_params_failure",
      "description": "At least one required request parameter for the endpoint is missing from the request. Even if all required parameters are supplied as keys, this error may still be returned if the value of one of the required parameters is blank (e.g., an empty string). This error may also be returned if the <span class=\"ubuntu-mono regular\">Content-Type</span> of the request isn't explicitly specified as <span class=\"ubuntu-mono regular\">application/json</span>."
    },
    {
      "failure_name": "nonexistent_user_failure",
      "description": "The endpoint attempted to execute actions on a user that does not exist, or is no longer active."
    },
    {
      "failure_name": "nonexistent_paste_failure",
      "description": "The endpoint attempted to execute actions on a paste that does not exist, or is no longer active."
    },
    {
      "failure_name": "undefined_failure",
      "description": "The server encountered an undefined error (usually related to the database). No client-side actions can be taken to resolve the problem."
    },
    {
      "failure_name": "unauthenticated_pastes_disabled_failure",
      "description": "The server administrator has required that users be signed in to post new pastes. You must authenticate this request with an API key."
    },
    {
      "failure_name": "user_registration_disabled_failure",
      "description": "The server administrator has disabled new user registration."
    },
    {
      "failure_name": "paste_attachments_disabled_failure",
      "description": "The server administrator has disabled paste attachments, and the action attempted to add an attachment to a paste. Repeating the same request without any attachments will succeed."
    },
    {
      "failure_name": "paste_attachment_too_large_failure",
      "description": "The uploaded paste attachment is larger than that allowed by the server."
    }
  ],
  "api_endpoints": [
    {
      "name": "Create new paste",
      "uri_class": ["paste", "PasteSubmitURI"],
      "authentication": "optional",
      "short_description": "Create a new anonymous or authorized paste",
      "long_description": "Post a new paste, optionally tied to an existing user account. If the endpoint is authenticated with an API key, the paste will be posted under the user account associated with the API key. If no authentication is provided, the post will be posted anonymously. The endpoint exposes the same options available to the main web interface, including specifying the paste title, expiry, password, and language. Full details on required and optional request parameters are detailed below.",
      "request_parameters": [
        {
          "key": "contents",
          "value": [
            "Paste contents",
            "test paste"
          ],
          "required": true,
          "type": "string"
        },
        {
          "key": "expiry_time",
          "value": [
            "Unix timestamp at which the paste should expire; defaults to no expiry if no value is supplied",
            "1453355837"
          ],
          "required": false,
          "type": "number"
        },
        {
          "key": "title",
          "value": [
            "Paste title; defaults to Untitled if no value is supplied",
            "Paste title"
          ],
          "required": false,
          "type": "string"
        },
        {
          "key": "language",
          "value": [
            "Language of the paste; defaults to plain text if no value is supplied",
            "python"
          ],
          "required": false,
          "type": "string"
        },
        {
          "key": "password",
          "value": [
            "Optionally add a password to restrict access to the paste; defaults to no password if no value is supplied",
            "password123"
          ],
          "required": false,
          "type": "string"
        }
      ],
      "response_parameters": [
        {
          "key": "post_time",
          "value": "Unix timestamp at which the paste was posted",
          "type": "number"
        },
        {
          "key": "expiry_time",
          "value": "Request input callback",
          "type": "number"
        },
        {
          "key": "language",
          "value": "Request input callback",
          "type": "string"
        },
        {
          "key": "title",
          "value": "Request input callback",
          "type": "string"
        },
        {
          "key": "views",
          "value": "The number of views the paste has; initialized to 0",
          "type": "number"
        },
        {
          "key": "is_active",
          "value": "This field will always be <span class=\"ubuntu-mono regular\">true</span> for a new paste.",
          "type": "boolean"
        },
        {
          "key": "is_password_protected",
          "value": "Whether the paste is protected by a password.",
          "type": "boolean"
        },
        {
          "key": "paste_id_repr",
          "value": "The paste ID, represented as either a decrypted or encrypted ID (this is configured by the server administrator)",
          "type": "number/string"
        },
        {
          "key": "contents",
          "value": "Request input callback",
          "type": "string"
        },
        {
          "key": "url",
          "value": "Full URL to the web interface for viewing the paste",
          "type": "string"
      },
      {
          "key": "deactivation_token",
          "value": "Token used for deactivating the paste",
          "type": "string"
      }
      ]
    },
    {
      "name": "Get paste details",
      "uri_class": ["paste", "PasteDetailsURI"],
      "authentication": "optional",
      "short_description": "Get details for an existing paste",
      "long_description": "Retrieve publicly accessible details for an existing, active paste, queried by paste ID. The paste ID will either be an encrypted string (if the server administrator has enabled this option), or a regular decrypted interger. For password-protected pastes, you must supply the <span class=\"ubuntu-mono regular\">password</span> request parameter, containing a plain-text representation of the paste's password.",
      "request_parameters": [
        {
          "key": "paste_id",
          "value": [
            "Paste ID",
            "5"
          ],
          "required": true,
          "type": "number/string"
        },
        {
          "key": "password",
          "value": [
            "Plain-text password of the paste, if it is password-protected. If the paste requested is password-protected, failing to provide this option will result in the <span class=\"ubuntu-mono regular\">auth_failure</span> error.",
            "p4ssw0rd"
          ],
          "required": false,
          "type": "string"
        }
      ],
      "response_parameters": [
        {
          "key": "post_time",
          "value": "Unix timestamp at which the paste was posted",
          "type": "number"
        },
        {
          "key": "expiry_time",
          "value": "Unix timestamp at which the paste expires; <span class=\"ubuntu-mono regular\">null</span> if the paste doesn't expire",
          "type": "number"
        },
        {
          "key": "language",
          "value": "Language of the paste",
          "type": "string"
        },
        {
          "key": "title",
          "value": "Title of the paste",
          "type": "string"
        },
        {
          "key": "views",
          "value": "The number of views the paste has",
          "type": "number"
        },
        {
          "key": "is_active",
          "value": "This field will always be <span class=\"ubuntu-mono regular\">true</span>, since inactive pastes are not returned by this endpoint.",
          "type": "boolean"
        },
        {
          "key": "is_password_protected",
          "value": "Whether the paste is protected by a password.",
          "type": "boolean"
        },
        {
          "key": "paste_id_repr",
          "value": "Request input callback",
          "type": "number/string"
        },
        {
          "key": "contents",
          "value": "Contents of the paste",
          "type": "string"
        },
        {
          "key": "poster_username",
          "value": "Username of poster; 'Anonymous' if posted anonymously",
          "type": "string"
        },
        {
          "key": "url",
          "value": "Full URL to the web interface for viewing the paste",
          "type": "string"
        },
        {
          "key": "attachments",
          "value": "Array of attachments associated with the paste, each of which has properties <span class=\"ubuntu-mono regular\">file_name</span> (name of the uploaded file), <span class=\"ubuntu-mono regular\">file_size</span> (size of the file in bytes), and <span class=\"ubuntu-mono regular\">mime_type</span> (the MIME type of the file, if available)",
          "type": "array"
        }
      ]
    },
    {
      "name": "Get pastes for user",
      "uri_class": ["paste", "PastesForUserURI"],
      "authentication": "required",
      "short_description": "Get all pastes for the authenticated user",
      "long_description": "Retrieve a list of paste details for the user, authenticated via an API key. The pastes will be returned in an array whose elements have the same key-value pairs as the Paste Details API endpoint.",
      "request_parameters": [],
      "response_parameters": [
        {
          "key": "pastes",
          "value": "Array of paste details. The paste details fields are exactly identical to those returned by the Paste Details API endpoint above.",
          "type": "array"
        }
      ]
    },
    {
      "name": "Deactivate paste",
      "uri_class": ["paste", "PasteDeactivateURI"],
      "authentication": "optional",
      "short_description": "Deactivate an anonymous or authenticated paste",
      "long_description": "Deactivate an existing paste. You can either deactivate the paste by either (1) supplying the deactivation token associated with the paste without any authentication, or (2) supplying authentication (API key) associated with the account that owns the paste. Note that for (2), the paste must be an authenticated paste (e.g. posted with authentication, and thereby posted to an existing user account). (1) is the only way to deactivate an anonymous paste, but may also be used for authenticated pastes. The paste ID will either be an encrypted string (if the server administrator has enabled this option), or a regular decrypted interger.",
      "request_parameters": [
        {
          "key": "paste_id",
          "value": [
            "Paste ID",
            "5"
          ],
          "required": true,
          "type": "number/string"
        },
        {
          "key": "deactivation_token",
          "value": [
            "Deactivation token associated with the paste, generated when it is first posted. While the endpoint will respond without this field, if attempting to deactivate an anonymous paste, the request will fail if this field is not provided.",
            "GoX0ik10I6NfTyzQhIHwpPv4O1MQxULhRoCAERjqSNPeOG5TusvlI3lSHqzqc2sW"
          ],
          "required": false,
          "type": "string"
        }
      ],
      "response_parameters": [
        {
          "key": "paste_id",
          "value": "Request input callback",
          "type": "number/string"
        }
      ]
    },
    {
      "name": "Set paste password",
      "uri_class": ["paste", "PasteSetPasswordURI"],
      "authentication": "required",
      "short_description": "Set a password on paste posted from a user account",
      "long_description": "Set or remove a password on a paste that was posted with authentication. You can only modify pastes that the API key-authenticated user owns.",
      "request_parameters": [
        {
          "key": "paste_id",
          "value": [
            "Paste ID",
            "1"
          ],
          "required": true,
          "type": "number/string"
        },
        {
          "key": "password",
          "value": [
            "The password to set for the paste. You can set this field to an empty string or <span class=\"ubuntu-mono regular\">null</span> to remove the password on the paste (if applicable).",
            "p4ssw0rd"
          ],
          "required": true,
          "type": "string/null"
        }
      ],
      "response_parameters": [
        {
          "key": "paste_id",
          "value": "Request input callback",
          "type": "number/string"
        }
      ]
    },
    {
      "name": "Get recent pastes",
      "uri_class": ["paste", "RecentPastesURI"],
      "authentication": "none",
      "short_description": "Retrieve a paged enumeration of recently posted pastes",
      "long_description": "Query the database for a listing of recent pastes, ordered from most recent to least recent. In order to limit the size of the database query, results are paginated: specify the number of pastes to retrieve per query and specify the page number of the query. Both anonymous and authenticated pastes are returned.",
      "request_parameters": [
        {
          "key": "page_num",
          "value": [
            "Page number of the list for which to retrieve pastes. The first page is 0, and there is no last page (though the endpoint will return empty results if there are no more results to display).",
            "0"
          ],
          "required": true,
          "type": "number"
        },
        {
          "key": "num_per_page",
          "value": [
            "The number of pastes to retrieve per page. It is recommended to not make this number too large, so to limit the size of the database query.",
            "20"
          ],
          "required": true,
          "type": "number"
        }
      ],
      "response_parameters": [
        {
          "key": "pastes",
          "value": "Array of paste details, ordered (descending) by post time. The paste details fields are exactly identical to those returned by the Paste Details API endpoint above.",
          "type": "array"
        }
      ]
    },
    {
      "name": "Get top pastes",
      "uri_class": ["paste", "TopPastesURI"],
      "authentication": "none",
      "short_description": "Retrieve a paged enumeration of top pastes",
      "long_description": "Query the database for a listing of most-viewed pastes, ordered from the highest number of views to the least number of views. In order to limit the size of the database query, results are paginated: specify the number of pastes to retrieve per query and specify the page number of the query. Both anonymous and authenticated pastes are returned.",
      "request_parameters": [
        {
          "key": "page_num",
          "value": [
            "Page number of the list for which to retrieve pastes. The first page is 0, and there is no last page (though the endpoint will return empty results if there are no more results to display).",
            "0"
          ],
          "required": true,
          "type": "number"
        },
        {
          "key": "num_per_page",
          "value": [
            "The number of pastes to retrieve per page. It is recommended to not make this number too large, so to limit the size of the database query.",
            "20"
          ],
          "required": true,
          "type": "number"
        }
      ],
      "response_parameters": [
        {
          "key": "pastes",
          "value": "Array of paste details, ordered (descending) by number of views. The paste details fields are exactly identical to those returned by the Paste Details API endpoint above.",
          "type": "array"
        }
      ]
    }
  ]
}
